PROJECT BACKLOG

SPRINT 1:
1.	PROJECT SETUP AND INITIALIZATION:
•	CREATE GITHUB REPOSITORY FOR THE PROJECT.
•	SET UP PROJECT STRUCTURE AND ORGANIZATION ON GITHUB.
•	DEFINE INITIAL PROJECT DOCUMENTATION.
•	IMPLEMENT DOCKER FILE FOR PROJECT SETUP.

2.	ENVIRONMENT AND WORKFLOW SETUP:
•	CONFIGURE DEVELOPMENT ENVIRONMENT DEPENDENCIES.
•	ESTABLISH GIT FLOW WORKFLOW WITH MASTER, DEVELOP, AND RELEASE BRANCHES.

3.	INITIAL RELEASE AND CODE OF CONDUCT:
•	CREATE A RELEASE PROCESS FOR THE PROJECT.
•	VERIFY THE FUNCTIONALITY OF THE FIRST RELEASE ON GITHUB.
•	DEFINE AND DOCUMENT A CODE OF CONDUCT FOR THE PROJECT.


SPRINT 2:
4.	USER AUTHENTICATION:
•	DESIGN AND IMPLEMENT A SECURE LOGIN SYSTEM.
•	INTEGRATE HASHED PASSWORDS FOR USER AUTHENTICATION.

5.	BASIC REPORT GENERATION:
•	DEVELOP SQL QUERIES FOR BASIC REPORT GENERATION.
•	TEST AND VALIDATE BASIC REPORT GENERATION FUNCTIONALITY.

6.	SORTING AND FILTERING:
•	IMPLEMENT SORTING OPTIONS FOR REPORTS BASED ON POPULATION.
•	ADD FILTERING FUNCTIONALITY FOR CUSTOMIZED REPORTS.

SPRINT 3:
7.	TOP N POPULATED ENTITIES:
•	DEVELOP FUNCTIONALITY TO DISPLAY THE TOP N POPULATED COUNTRIES, CITIES, AND CAPITAL CITIES.
•	IMPLEMENT USER INPUT VALIDATION FOR N.

8.	POPULATION STATISTICS:
•	CREATE SQL QUERIES TO DISPLAY POPULATION STATISTICS FOR CONTINENTS, REGIONS, AND COUNTRIES.
•	INCLUDE PERCENTAGE CALCULATIONS FOR POPULATIONS LIVING IN CITIES.

9.	LANGUAGE STATISTICS:
•	INTEGRATE LANGUAGE STATISTICS FOR SPECIFIED LANGUAGES.
•	INCLUDE THE NUMBER AND PERCENTAGE OF SPEAKERS IN THE REPORTS.

SPRINT 4:
10.	SECURITY MEASURES:
•	ENHANCE SECURITY MEASURES, INCLUDING ENCRYPTED STORAGE OF SENSITIVE DATA.
•	IMPLEMENT SECURE USER AUTHENTICATION.

11.	PERFORMANCE OPTIMIZATION AND FINALIZATION:
•	OPTIMIZE SQL QUERIES FOR EFFICIENT REPORT GENERATION.
•	TEST AND MEASURE PERFORMANCE WITH LARGE DATASETS.
•	COMPLETE USER INTERFACE IMPROVEMENTS AND VALIDATION.
•	FINALIZE DOCUMENTATION, INCLUDING USER AND DEVELOPER GUIDES.

